#!/bin/bash
if [[ $BASH_SOURCE != $0 ]]; then echo "$BASH_SOURCE must be executed, not sourced."; return 255; fi
#
# A script to fool iOS playgrounds into allowing access to CommonCrypto
#
# The script creates a dummy CLDCrypto.framework in the SDK's System
# Framework Library Directory with a module map that points to the
# umbrella header
#
# Usage:
# ./GenerateCLDCryptoModule <sdk> [<directory>]
# To generate the CLDCrypto.framework in SDK use
# ./GenerateCLDCryptoModule iphonesimulator
# To generate a local CLDCrypto module map use
# ./GenerateCLDCryptoModule iphonesimulator .
#
# Don't forget to chmod the script first!
# The script depends on xcrun to find the SDK directory
#
SDK=$1 
# Find the SDK path and make sure it exists
SDK_PATH=`xcrun --sdk $SDK --show-sdk-path`
echo $?
if [ ! -e $SDK_PATH ] ; then
  echo "ERROR: The SDK path '$SDK_PATH' did not exist"
  exit 1
fi
 
# Is it a local module map dir or a fake SDK framework
if [[ $2 != "" ]]; then
  CC_PATH=$2/Cloudinary/Frameworks/CLDCrypto/CLDCrypto.framework
else
  CC_PATH=$SDK_PATH/System/Library/Frameworks/CLDCrypto/CLDCrypto.framework
fi

# Only proceed if there is *not* a CLDCrypto.framework already
if [ -e $CC_PATH ] ; then
  echo "ERROR: CLDCrypto.framework already exists"
  exit 1
fi
 
# Check the CommonCrypto header is where I expect it to be
HEADER_FILE1=$SDK_PATH/usr/include/CommonCrypto/CommonCrypto.h
if [ ! -e $HEADER_FILE1 ] ; then
  echo "ERROR: The CommonCrypto.h header file could not be found."
  exit 1
fi

HEADER_FILE2=$SDK_PATH/usr/include/CommonCrypto/CommonRandom.h
if [ ! -e $HEADER_FILE2 ] ; then
echo "ERROR: The CommonRandom.h header file could not be found."
exit 1
fi

mkdir $CC_PATH
 
# Write the module.map file
cat <<_IDZ_EOF_ > $CC_PATH/module.map
module CLDCrypto [system] {
  header "$HEADER_FILE1"
  export *
}
_IDZ_EOF_
